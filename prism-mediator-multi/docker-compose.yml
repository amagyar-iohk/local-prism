---
services:
  ##########################
  # Database
  ##########################
  db-issuer:
    image: postgres:13
    environment:
      POSTGRES_MULTIPLE_DATABASES: "castor,pollux,connect,agent,node_db"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./postgres/init-script.sh:/docker-entrypoint-initdb.d/init-script.sh
      - ./postgres/max_conns.sql:/docker-entrypoint-initdb.d/max_conns.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "agent"]
      interval: 10s
      timeout: 5s
      retries: 5

  db-holder:
    image: postgres:13
    environment:
      POSTGRES_MULTIPLE_DATABASES: "castor,pollux,connect,agent,node_db"
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./postgres/init-script.sh:/docker-entrypoint-initdb.d/init-script.sh
      - ./postgres/max_conns.sql:/docker-entrypoint-initdb.d/max_conns.sql

    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "agent"]
      interval: 10s
      timeout: 5s
      retries: 5

  ##########################
  # Building-blocks
  ##########################
  prism-node-issuer:
    image: ghcr.io/input-output-hk/prism-node:${PRISM_NODE_VERSION}
    environment:
      NODE_PSQL_HOST: db-issuer:5432
    depends_on:
      db-issuer:
        condition: service_healthy

  prism-node-holder:
    image: ghcr.io/input-output-hk/prism-node:${PRISM_NODE_VERSION}
    environment:
      NODE_PSQL_HOST: db-issuer:5432
    depends_on:
      db-holder:
        condition: service_healthy

  prism-agent-issuer:
    image: ghcr.io/hyperledger/identus-cloud-agent:${PRISM_AGENT_VERSION}
    ports:
      - "8090:8090"
      - "8081:8081"
    environment:
      CASTOR_DB_HOST: db-issuer
      CASTOR_DB_PORT: 5432
      CASTOR_DB_NAME: castor
      CASTOR_DB_USER: postgres
      CASTOR_DB_PASSWORD: postgres
      POLLUX_DB_HOST: db-issuer
      POLLUX_DB_PORT: 5432
      POLLUX_DB_NAME: pollux
      POLLUX_DB_USER: postgres
      POLLUX_DB_PASSWORD: postgres
      CONNECT_DB_HOST: db-issuer
      CONNECT_DB_PORT: 5432
      CONNECT_DB_NAME: connect
      CONNECT_DB_USER: postgres
      CONNECT_DB_PASSWORD: postgres
      AGENT_DB_HOST: db-issuer
      AGENT_DB_PORT: 5432
      AGENT_DB_NAME: agent
      AGENT_DB_USER: postgres
      AGENT_DB_PASSWORD: postgres
      AGENT_HTTP_PORT: 8090
      AGENT_DIDCOMM_PORT: 8081
      DIDCOMM_SERVICE_URL: http://host.docker.internal:8081
      REST_SERVICE_URL: http://host.docker.internal:8090
      PRISM_NODE_HOST: prism-node-issuer
      PRISM_NODE_PORT: 50053
      VAULT_ADDR: http://vault-server:8200
      VAULT_TOKEN: root
      SECRET_STORAGE_BACKEND: postgres
      DEV_MODE: true
      DEFAULT_WALLET_ENABLED:
      DEFAULT_WALLET_SEED:
      DEFAULT_WALLET_WEBHOOK_URL:
      DEFAULT_WALLET_WEBHOOK_API_KEY:
      DEFAULT_WALLET_AUTH_API_KEY:
      GLOBAL_WEBHOOK_URL:
      GLOBAL_WEBHOOK_API_KEY:
      WEBHOOK_PARALLELISM:
      ADMIN_TOKEN:
      API_KEY_SALT:
      API_KEY_ENABLED: false
      API_KEY_AUTHENTICATE_AS_DEFAULT_USER:
      API_KEY_AUTO_PROVISIONING:
    depends_on:
      db-issuer:
        condition: service_healthy
      prism-node-issuer:
        condition: service_started
      vault-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://host.docker.internal:8090/_system/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  prism-agent-holder:
    image: ghcr.io/hyperledger/identus-cloud-agent:${PRISM_AGENT_VERSION}
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      CASTOR_DB_HOST: db-holder
      CASTOR_DB_PORT: 5432
      CASTOR_DB_NAME: castor
      CASTOR_DB_USER: postgres
      CASTOR_DB_PASSWORD: postgres
      POLLUX_DB_HOST: db-holder
      POLLUX_DB_PORT: 5432
      POLLUX_DB_NAME: pollux
      POLLUX_DB_USER: postgres
      POLLUX_DB_PASSWORD: postgres
      CONNECT_DB_HOST: db-holder
      CONNECT_DB_PORT: 5432
      CONNECT_DB_NAME: connect
      CONNECT_DB_USER: postgres
      CONNECT_DB_PASSWORD: postgres
      AGENT_DB_HOST: db-holder
      AGENT_DB_PORT: 5432
      AGENT_DB_NAME: agent
      AGENT_DB_USER: postgres
      AGENT_DB_PASSWORD: postgres
      AGENT_HTTP_PORT: 9000
      AGENT_DIDCOMM_PORT: 9001
      DIDCOMM_SERVICE_URL: http://host.docker.internal:9001
      REST_SERVICE_URL: http://host.docker.internal:9000
      PRISM_NODE_HOST: prism-node-holder
      PRISM_NODE_PORT: 50053
      VAULT_ADDR: http://vault-server:8200
      VAULT_TOKEN: root
      SECRET_STORAGE_BACKEND: postgres
      DEV_MODE: true
      DEFAULT_WALLET_ENABLED:
      DEFAULT_WALLET_SEED:
      DEFAULT_WALLET_WEBHOOK_URL:
      DEFAULT_WALLET_WEBHOOK_API_KEY:
      DEFAULT_WALLET_AUTH_API_KEY:
      GLOBAL_WEBHOOK_URL:
      GLOBAL_WEBHOOK_API_KEY:
      WEBHOOK_PARALLELISM:
      ADMIN_TOKEN:
      API_KEY_SALT:
      API_KEY_ENABLED: false
      API_KEY_AUTHENTICATE_AS_DEFAULT_USER:
      API_KEY_AUTO_PROVISIONING:
    depends_on:
      db-holder:
        condition: service_healthy
      prism-node-holder:
        condition: service_started
      vault-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://host.docker.internal:9000/_system/health"]
      interval: 30s
      timeout: 10s
      retries: 5
 
  vault-server:
    image: vault:1.13.3
    #    ports:
    #      - "8200:8200"
    environment:
      VAULT_ADDR: "http://0.0.0.0:8200"
      VAULT_DEV_ROOT_TOKEN_ID: root
    command: server -dev -dev-root-token-id=root
    cap_add:
      - IPC_LOCK
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pg_data_db-issuer:
  pg_data_db-holder:
  pgadmin:

